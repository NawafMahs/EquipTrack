using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Design;
using Microsoft.Extensions.Configuration;

namespace EquipTrack.Infrastructure.Data;

/// <summary>
/// Factory for creating EquipTrackDbContext instances at design time (for migrations)
/// </summary>
public class EquipTrackDbContextFactory : IDesignTimeDbContextFactory<EquipTrackDbContext>
{
    public EquipTrackDbContext CreateDbContext(string[] args)
    {
        var configuration = new ConfigurationBuilder()
            .SetBasePath(Directory.GetCurrentDirectory())
            .AddJsonFile("appsettings.json", optional: true)
            .AddJsonFile("appsettings.Development.json", optional: true)
            .Build();

        var optionsBuilder = new DbContextOptionsBuilder<EquipTrackDbContext>();
        var connectionString = configuration.GetConnectionString("DefaultConnection") 
            ?? "Server=localhost,1433;Database=EquipTrackCMMS;User Id=SA;Password=YourStrong@Passw0rd;TrustServerCertificate=true;MultipleActiveResultSets=true";
        
        optionsBuilder.UseSqlServer(connectionString);

        return new EquipTrackDbContext(optionsBuilder.Options);
    }
}