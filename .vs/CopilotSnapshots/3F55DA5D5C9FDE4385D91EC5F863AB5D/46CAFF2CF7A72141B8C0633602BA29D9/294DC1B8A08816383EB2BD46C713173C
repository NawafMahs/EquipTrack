using EquipTrack.Domain.Entities;
using Microsoft.EntityFrameworkCore;

namespace EquipTrack.Infrastructure.Data;

public class Application : DbContext
{
    public Application(DbContextOptions<Application> options) : base(options)
    {
    }

    public DbSet<User> Users { get; set; }
    public DbSet<Asset> Assets { get; set; }
    public DbSet<WorkOrder> WorkOrders { get; set; }
    public DbSet<SparePart> SpareParts { get; set; }
    public DbSet<WorkOrderSparePart> WorkOrderSpareParts { get; set; }
    public DbSet<PreventiveMaintenance> PreventiveMaintenances { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        base.OnModelCreating(modelBuilder);

        // Apply configurations
        modelBuilder.ApplyConfigurationsFromAssembly(typeof(Application).Assembly);

        // Global query filters for soft delete (if needed in future)
        // modelBuilder.Entity<BaseEntity>().HasQueryFilter(e => !e.IsDeleted);
    }

   
}